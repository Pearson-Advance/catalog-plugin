# GNU make configuration file.
# https://www.gnu.org/software/make/manual/make.html

.PHONY: requirements
.DEFAULT_GOAL := help

PIP_COMPILE = pip-compile --upgrade
TOX_RUN = tox run --no-list-dependencies

help: ## Display help message.
	@echo "Please use \`make <target>\` where <target> is one of"
	@awk -F ':.*?## ' '/^[a-zA-Z]/ && NF==2 {printf "\033[36m  %-25s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST) | sort

clean: ## Remove generated byte code and build artifacts.
	find . -name '__pycache__' -exec rm -rf {} +
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	rm -fr *.egg-info
	rm -fr .tox
	rm -fr .*_cache

upgrade: ## Update requirements.
	pip install -qr requirements/pip-tools.txt
	# Make sure to compile files after any other files they include!
	$(PIP_COMPILE) -o requirements/pip-tools.txt requirements/pip-tools.in
	$(PIP_COMPILE) -o requirements/base.txt requirements/base.in
	$(PIP_COMPILE) -o requirements/test.txt requirements/test.in
	$(PIP_COMPILE) -o requirements/quality.txt requirements/quality.in
	$(PIP_COMPILE) -o requirements/dev.txt requirements/dev.in
	# Let tox control the Django version for tests
	sed '/^[dD]jango==/d' requirements/test.txt > requirements/test.tmp
	mv requirements/test.tmp requirements/test.txt

requirements: ## Install development requirements.
	pip install -r requirements/dev.txt
	pre-commit install

requirements.ci: # Install CI requirements.
	pip install --upgrade pip
	pip install tox -c requirements/constraints.txt

test: ## Run tests.
	$(TOX_RUN) --skip-env quality

quality: ## Run quality check.
	$(TOX_RUN) -e quality

validate: ## Run quality check and tests.
	$(TOX_RUN)

selfcheck: ## Check that the Makefile is well-formed.
	@echo 'The Makefile is well-formed.'
